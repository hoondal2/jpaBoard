
## JPA 스터디

1. 웹 개발자들은 DB 관련 로직을 작성하는데 많은 시간을 쏟을 수 밖에 업슨데, 작성되는 로직에는
    반복적인 코드가 많을 뿐더러, 생산성 면에서 오래도록 문제가 되어왔다.
2. JPA란?
    - 자바 객체와 DB 테이블 간의 매핑을 처리하는 ORM(Object Relational Mapping) 기술의 표준
    - JPA에서는 테이블과 매핑되는 테이블 구조화 클래스를 엔티티 클래스라고 한다.
    - 즉 엔티티 클래스 자체를 테이블이라고 생각하면 된다.




## 이외에 알아본 것

1. Hikari CP(히카리 커넥션풀)

    - JDBC ?
        JDBC는 자바에서 데이터베이스에 접속할 수 있도록하는 자바 API이다.
        DB에서 자료를 쿼리하거나 업데이트하는 방법을 제공한다.

    - DB 커넥션 풀이란?
        일반적인 데이터 연동과정은 웹 어플리케이션이 필요할 때마다 데이터베이스에 연결하여
        작업하는 방식이다. 하지만 이런식으로 필요할 때마다 연동 작업할 경우, DB 연결에 시간이 많이 걸리는 문제가 발생.
        이 문제를 해결하기 위해 현재는 웹앱이 실행됨과 동시에 연동할 DB와의 연결을 미리 설정해둔다.
        그리고 필요할 때마다 미리 연결해놓은 상태를 이용해 빠르게 DB와 연동, 작업한다.
        이렇게 미리 DB와 연결시킨 상태를 유지하는 기술을 커넥션 풀이라고 한다.

        자바에서는 기본적으로 DataSource 인터페이스를 사용하여 커넥션풀을 관리한다.
        스프링에서는 사용자가 직접 커넥션을 관리할 필요없이 자동화된 기법들을 제공하는데,
        SpringBoot 2.0 이전에는 tomcat-jdbc를 사용
        현재 2.0 이후부터는 HikariCP를 기본옵션으로 채택하고 있다.

    - 왜 Hikari CP?
        다른 커넥션풀 관리 프레임워크보다 월등한 성능을 가졌다. 이유는 커넥션풀의 관리 방법에 있다.
        히카리는 Connection 객체를 한번 Wrapping한 PoolEntry로 Connection을 관리하며,
        이를 관리하는 ConcurrentBag이라는 구조체를 사용하고 있다.

        HikariPool.getConnection() -> ConcurrentBag.borrow() 라는 메서드를 통해 사용가능한 Connection을 리턴하도록 되어있다.
        이 과정에서 커넥션 생성을 요청한 스레드의 정보를 저장해두고 다음에 접근시 저장된 정보를 이용해 빠르게 반환해준다.

        spring-boot-starter-jdbc, spring-boot-starter-data-jpa를 사용한다면 히카리에 의존한다.

        데드락 이슈가 있고, 이를 피하기 위한 pool사이즈 커스텀 공식이 있다.



출처 : https://velog.io/@miot2j/Spring-DB%EC%BB%A4%EB%84%A5%EC%85%98%ED%92%80%EA%B3%BC-Hikari-CP-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0